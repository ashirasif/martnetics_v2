import { PerformanceMonitor, PerspectiveCamera } from "@react-three/drei";
import { Canvas } from "@react-three/fiber";
import Head from "next/head";
import Link from "next/link";
import { api } from "~/utils/api";
import { Scene } from "../components/3d/Scene";
import { useEffect, useRef, useState } from "react";

export default function Home() {
  const [dpr, setDpr] = useState<number>(1);
  const [m, setM] = useState<number>(0.002);
  const pages = useRef<number>(8);
  const progress = useRef<HTMLDivElement>();

  useEffect(() => {
    window.addEventListener("wheel", (e) => {
      if (m + Math.sign(e.deltaY) / 100 > 0.002) {
        setM(m + Math.sign(e.deltaY) / 50);
      }
    });
  });

  useEffect(() => {
    progress.current!.style.width = `${Math.floor(m * 100)}%`
  }, [m])

  return (
    <>
      <Head>
        <title>Martnetics</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="selection:bg-black selection:text-blue-700 bg-white">
        <div className="h-full w-full overflow-hidden">
        
          <div className="z-20 relative flex flex-col items-center justify-around h-screen">
            <div className={'h-2 bg-red-600 z-20'} ref={progress}></div>
            <div className="flex flex-col items-center justify-center tracking-widest ">
              <div className="text-center text-6xl font-black tracking-tight text-blue-300 md:text-8xl 2xl:text-9xl">
                Add Another Dimension
              </div>
              <div className="text-center text-xl font-light tracking-widest text-blue-300 md:text-3xl">
                With Martnetics
              </div>
            </div>
            <div className="text-blue-300 text-lg tracking-widest font-light">scroll down</div>
          </div>
          <div className="fixed left-0 top-0 h-screen bg-white w-full">
            <Canvas
              shadows
              gl={{ powerPreference: "high-performance"}}
              dpr={dpr}
              
            >
              <PerformanceMonitor
                onIncline={() => setDpr(2)}
                onDecline={() => setDpr(1)}
              />
              <Scene m={m}/>
            </Canvas>
          </div>
        </div>
      </main>
    </>
  );
}
